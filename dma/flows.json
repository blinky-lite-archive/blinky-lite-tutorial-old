[
    {
        "id": "465cfd27.107674",
        "type": "tab",
        "label": "Red LED DMA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1abf3c75.e6d024",
        "type": "tab",
        "label": "Green LED DMA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ddd272b6.33c42",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT-dma",
        "broker": "broker.shiftr.io",
        "port": "1883",
        "clientid": "blinky-lite-tutorial-dma",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    },
    {
        "id": "a617aefc.4918d",
        "type": "arduino-board",
        "z": "",
        "device": "/dev/ttyACM0"
    },
    {
        "id": "262b6cae.fe0b94",
        "type": "mqtt out",
        "z": "465cfd27.107674",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "true",
        "broker": "ddd272b6.33c42",
        "x": 1170,
        "y": 200,
        "wires": []
    },
    {
        "id": "87b969ce.fb53b8",
        "type": "function",
        "z": "465cfd27.107674",
        "name": "Adapt to MQTT",
        "func": "return {'topic':'blinky-lite-tutorial/dma/red/' + msg.topic,'payload':msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "262b6cae.fe0b94"
            ]
        ]
    },
    {
        "id": "6243729.bae208c",
        "type": "mqtt in",
        "z": "465cfd27.107674",
        "name": "",
        "topic": "blinky-lite-tutorial/web-app/red/#",
        "qos": "0",
        "broker": "ddd272b6.33c42",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "25ee484a.aa07a8"
            ]
        ]
    },
    {
        "id": "25ee484a.aa07a8",
        "type": "json",
        "z": "465cfd27.107674",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "174ff73a.4e0499"
            ]
        ]
    },
    {
        "id": "174ff73a.4e0499",
        "type": "function",
        "z": "465cfd27.107674",
        "name": "Parse MQTT",
        "func": "msg.topic = msg.topic.substring(msg.topic.lastIndexOf('/') + 1);\nflow.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "b107d91b.d14b08",
        "type": "function",
        "z": "465cfd27.107674",
        "name": "Button Debouncer",
        "func": "if (msg.payload == 0) return null;\nvar thisPress = new Date().getTime();\nvar lastPress = context.get('lastPress');\nif (lastPress == undefined) lastPress = 0;\nif ((thisPress - lastPress) < 500 ) return null;\nvar ledState  = flow.get('ledState');\nledState = ledState + 1;\nif (ledState > 2) ledState = 0;\ncontext.set('lastPress',thisPress);\nmsg.topic = 'ledState';\nmsg.payload = ledState;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "f2184265.5872d",
        "type": "arduino in",
        "z": "465cfd27.107674",
        "name": "Button",
        "pin": "8",
        "state": "INPUT",
        "arduino": "a617aefc.4918d",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "b107d91b.d14b08"
            ]
        ]
    },
    {
        "id": "d83d4f80.21f96",
        "type": "inject",
        "z": "465cfd27.107674",
        "name": "",
        "topic": "ledState",
        "payload": "2",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "b8d60c77.daaf1",
        "type": "arduino in",
        "z": "465cfd27.107674",
        "name": "Pot",
        "pin": "0",
        "state": "ANALOG",
        "arduino": "a617aefc.4918d",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "2273880a.9427a8"
            ]
        ]
    },
    {
        "id": "2273880a.9427a8",
        "type": "function",
        "z": "465cfd27.107674",
        "name": "Pot Blocker",
        "func": "var lastReading = context.get('lastReading');\nif (lastReading == undefined) lastReading = -1;\nvar deltaReading = Math.abs(msg.payload - lastReading);\nif (deltaReading < 10 ) return null;\ncontext.set('lastReading', msg.payload);\nmsg.payload = Math.round(100.0 * (5.0 / 3.3) * msg.payload / 1024.0);\nmsg.topic = 'ledIntensity';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "d0d6c694.6f0bc8",
        "type": "inject",
        "z": "465cfd27.107674",
        "name": "Blinker",
        "topic": "blinker",
        "payload": "",
        "payloadType": "date",
        "repeat": "0.001",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 520,
        "y": 280,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "ae0ea12a.6f83d",
        "type": "function",
        "z": "465cfd27.107674",
        "name": "LED Controller",
        "func": "if (msg.topic != 'blinker') flow.set(msg.topic, msg.payload);\nvar ledValue = context.get('ledValue');\nif (ledValue == undefined) ledValue = -1;\nvar ledIntensity = flow.get('ledIntensity');\nif (ledIntensity == undefined) ledIntensity = 0;\nvar ledState = flow.get('ledState');\nif (ledState == undefined) ledState = 0;\nvar ledToggle = flow.get('ledToggle');\nif (ledToggle == undefined) ledToggle = 1;\nif (msg.topic != 'blinker')\n{\n    if (ledState == 0)\n    {\n        ledValue = 0;\n    }\n    if (ledState == 2) \n    {\n        ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n    }\n}\nelse\n{\n    ledValue = -1;\n    var counter = context.get('counter');\n    if (counter == undefined) counter = 0;\n    if (ledState == 1)\n    {\n        if (counter == 0)\n        {\n            ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n        }\n        if (counter == ledToggle)\n        {\n            ledValue = 0;\n        }\n    }\n    counter  = counter + 1;\n    if (counter > (ledToggle * 2)) counter = 0;\n    context.set('counter',counter);\n    \n    msg = null;\n}\nvar ledMsg = {'topic':'ledValue', 'payload':ledValue};\nif (ledValue < 0) ledMsg =  null;\nreturn [ledMsg, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "d9704691.6989e8"
            ],
            [
                "87b969ce.fb53b8"
            ]
        ]
    },
    {
        "id": "d9704691.6989e8",
        "type": "arduino out",
        "z": "465cfd27.107674",
        "name": "Led",
        "pin": "10",
        "state": "PWM",
        "arduino": "a617aefc.4918d",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "811444e.8abb8b8",
        "type": "inject",
        "z": "465cfd27.107674",
        "name": "",
        "topic": "ledToggle",
        "payload": "100",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 500,
        "y": 40,
        "wires": [
            [
                "ae0ea12a.6f83d"
            ]
        ]
    },
    {
        "id": "d07b1c63.f534e",
        "type": "mqtt out",
        "z": "1abf3c75.e6d024",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "true",
        "broker": "ddd272b6.33c42",
        "x": 1170,
        "y": 200,
        "wires": []
    },
    {
        "id": "670b6233.900d6c",
        "type": "function",
        "z": "1abf3c75.e6d024",
        "name": "Adapt to MQTT",
        "func": "return {'topic':'blinky-lite-tutorial/dma/green/' + msg.topic,'payload':msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "d07b1c63.f534e"
            ]
        ]
    },
    {
        "id": "ff285190.b2cde",
        "type": "mqtt in",
        "z": "1abf3c75.e6d024",
        "name": "",
        "topic": "blinky-lite-tutorial/web-app/green/#",
        "qos": "0",
        "broker": "ddd272b6.33c42",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "3d84bab8.462356"
            ]
        ]
    },
    {
        "id": "3d84bab8.462356",
        "type": "json",
        "z": "1abf3c75.e6d024",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "15c5e855.468858"
            ]
        ]
    },
    {
        "id": "15c5e855.468858",
        "type": "function",
        "z": "1abf3c75.e6d024",
        "name": "Parse MQTT",
        "func": "msg.topic = msg.topic.substring(msg.topic.lastIndexOf('/') + 1);\nflow.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    },
    {
        "id": "3b626ccb.497094",
        "type": "function",
        "z": "1abf3c75.e6d024",
        "name": "Button Debouncer",
        "func": "if (msg.payload == 0) return null;\nvar thisPress = new Date().getTime();\nvar lastPress = context.get('lastPress');\nif (lastPress == undefined) lastPress = 0;\nif ((thisPress - lastPress) < 500 ) return null;\nvar ledState  = flow.get('ledState');\nledState = ledState + 1;\nif (ledState > 2) ledState = 0;\ncontext.set('lastPress',thisPress);\nmsg.topic = 'ledState';\nmsg.payload = ledState;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    },
    {
        "id": "4ee4c26d.196bfc",
        "type": "arduino in",
        "z": "1abf3c75.e6d024",
        "name": "Button",
        "pin": "7",
        "state": "INPUT",
        "arduino": "a617aefc.4918d",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "3b626ccb.497094"
            ]
        ]
    },
    {
        "id": "2355ca22.ddf556",
        "type": "inject",
        "z": "1abf3c75.e6d024",
        "name": "",
        "topic": "ledState",
        "payload": "2",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    },
    {
        "id": "3f40bc50.4be6d4",
        "type": "arduino in",
        "z": "1abf3c75.e6d024",
        "name": "Pot",
        "pin": "1",
        "state": "ANALOG",
        "arduino": "a617aefc.4918d",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "32146bce.fa87e4"
            ]
        ]
    },
    {
        "id": "32146bce.fa87e4",
        "type": "function",
        "z": "1abf3c75.e6d024",
        "name": "Pot Blocker",
        "func": "var lastReading = context.get('lastReading');\nif (lastReading == undefined) lastReading = -1;\nvar deltaReading = Math.abs(msg.payload - lastReading);\nif (deltaReading < 10 ) return null;\ncontext.set('lastReading', msg.payload);\nmsg.payload = Math.round(100.0 * (5.0 / 3.3) * msg.payload / 1024.0);\nmsg.topic = 'ledIntensity';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    },
    {
        "id": "a5d77a8c.697998",
        "type": "inject",
        "z": "1abf3c75.e6d024",
        "name": "Blinker",
        "topic": "blinker",
        "payload": "",
        "payloadType": "date",
        "repeat": "0.001",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 520,
        "y": 280,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    },
    {
        "id": "79b63aa5.f08fa4",
        "type": "function",
        "z": "1abf3c75.e6d024",
        "name": "LED Controller",
        "func": "if (msg.topic != 'blinker') flow.set(msg.topic, msg.payload);\nvar ledValue = context.get('ledValue');\nif (ledValue == undefined) ledValue = -1;\nvar ledIntensity = flow.get('ledIntensity');\nif (ledIntensity == undefined) ledIntensity = 0;\nvar ledState = flow.get('ledState');\nif (ledState == undefined) ledState = 0;\nvar ledToggle = flow.get('ledToggle');\nif (ledToggle == undefined) ledToggle = 1;\nif (msg.topic != 'blinker')\n{\n    if (ledState == 0)\n    {\n        ledValue = 0;\n    }\n    if (ledState == 2) \n    {\n        ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n    }\n}\nelse\n{\n    ledValue = -1;\n    var counter = context.get('counter');\n    if (counter == undefined) counter = 0;\n    if (ledState == 1)\n    {\n        if (counter == 0)\n        {\n            ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n        }\n        if (counter == ledToggle)\n        {\n            ledValue = 0;\n        }\n    }\n    counter  = counter + 1;\n    if (counter > (ledToggle * 2)) counter = 0;\n    context.set('counter',counter);\n    \n    msg = null;\n}\nvar ledMsg = {'topic':'ledValue', 'payload':ledValue};\nif (ledValue < 0) ledMsg =  null;\nreturn [ledMsg, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "f7acb06c.b15c2"
            ],
            [
                "670b6233.900d6c"
            ]
        ]
    },
    {
        "id": "f7acb06c.b15c2",
        "type": "arduino out",
        "z": "1abf3c75.e6d024",
        "name": "Led",
        "pin": "9",
        "state": "PWM",
        "arduino": "a617aefc.4918d",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "60fb5c3d.a70cb4",
        "type": "inject",
        "z": "1abf3c75.e6d024",
        "name": "",
        "topic": "ledToggle",
        "payload": "100",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 500,
        "y": 40,
        "wires": [
            [
                "79b63aa5.f08fa4"
            ]
        ]
    }
]